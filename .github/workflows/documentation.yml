name: documentation

on:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetch all branches
        run: git fetch --all

      - name: Get Changed Files
        id: changed-files
        run: |
          # Obtém o nome da branch atual
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          # Obtém a base da branch para comparação
          BASE_BRANCH=$(git for-each-ref --format '%(upstream:short)' $(git symbolic-ref -q HEAD))
          # Se não houver base branch, compara com o commit inicial
          BASE_BRANCH=${BASE_BRANCH:-main}
          # Obtém a lista de arquivos modificados no push
          CHANGED_FILES=$(git diff --name-only --diff-filter=ACMRT $BASE_BRANCH...$CURRENT_BRANCH | grep '\.php$')
          # Armazena a lista de arquivos modificados no ambiente do GitHub Actions
          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV
          echo "Modified PHP files: $CHANGED_FILES"
        shell: /usr/bin/bash -e {0}
        env:
          GITHUB_PAGES: true

      - name: Build with phpDocumentor
        if: env.CHANGED_FILES != ''
        run: |
          docker run --rm --volume "$(pwd):/data" phpdoc/phpdoc:3 -vv --target docs --cache-folder .phpdoc/cache --template default

      - name: List contents of docs
        if: env.CHANGED_FILES != ''
        run: ls -la docs

      - name: Check size of docs folder
        if: env.CHANGED_FILES != ''
        run: du -sh docs

      - name: Upload artifact to GitHub Pages
        if: env.CHANGED_FILES != ''
        uses: actions/upload-pages-artifact@v1
        with:
          path: docs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
