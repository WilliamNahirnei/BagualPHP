name: documentation

on:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Garantir que o histórico completo do Git é recuperado

      - name: Fetch all branches and tags
        run: |
          git fetch --all
          git fetch --tags

      - name: Get Changed Files
        id: changed-files
        run: |
          # Obtém o commit mais recente na branch
          CURRENT_COMMIT=$(git rev-parse HEAD)
          # Obtém o commit anterior no histórico
          PREVIOUS_COMMIT=$(git log --format=%H -n 2 | tail -n 1)

          # Se não houver commit anterior, configura um valor nulo
          if [ -z "$PREVIOUS_COMMIT" ]; then
            PREVIOUS_COMMIT=$(git rev-list --max-parents=0 HEAD)  # Commit inicial
          fi

          # Lista os arquivos modificados entre o commit anterior e o atual
          CHANGED_FILES=$(git diff --name-only --diff-filter=ACMRT $PREVIOUS_COMMIT $CURRENT_COMMIT | grep '\.php$')

          # Armazena a lista de arquivos modificados no ambiente do GitHub Actions
          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV
          echo "Modified PHP files: $CHANGED_FILES"
        shell: /usr/bin/bash -e {0}
        env:
          GITHUB_PAGES: true

      - name: Build with phpDocumentor
        if: env.CHANGED_FILES != ''
        run: |
          # Converte a lista de arquivos modificados em uma lista separada por espaços
          FILES_TO_PROCESS=$(echo $CHANGED_FILES | tr '\n' ' ')
          # Executa o phpDocumentor apenas para os arquivos modificados
          docker run --rm --volume "$(pwd):/data" phpdoc/phpdoc:3 -vv --target docs --cache-folder .phpdoc/cache --template default -f $FILES_TO_PROCESS

      - name: List contents of docs
        if: env.CHANGED_FILES != ''
        run: ls -la docs

      - name: Check size of docs folder
        if: env.CHANGED_FILES != ''
        run: du -sh docs

      - name: Upload artifact to GitHub Pages
        if: env.CHANGED_FILES != ''
        uses: actions/upload-pages-artifact@v1
        with:
          path: docs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
